import { Component, ChangeDetectionStrategy, signal, inject, OnDestroy } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormBuilder, ReactiveFormsModule, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { LanguageService, Language } from '../../services/language.service';
import { DraftService } from '../../services/draft.service';

@Component({
  selector: 'app-registration',
  imports: [CommonModule, ReactiveFormsModule],
  changeDetection: ChangeDetectionStrategy.OnPush,
  template: `
    <div class="registration-container">
      <div class="registration-card">
        <header class="registration-header">
          <button class="back-button" (click)="goBack()" type="button">
            ‚Üê {{ getLocalizedText('back') }}
          </button>
          <h1 class="registration-title">{{ getLocalizedText('createAccount') }}</h1>
          <p class="registration-subtitle">{{ getLocalizedText('joinWorkshop') }}</p>
        </header>

        <form [formGroup]="registrationForm" (ngSubmit)="onSubmit()" class="registration-form">
          <!-- Personal Information -->
          <div class="form-section">
            <h2 class="section-title">{{ getLocalizedText('personalInfo') }}</h2>

            <div class="form-row">
              <div class="form-group">
                <label class="form-label" for="firstName"
                  >{{ getLocalizedText('firstName') }} *</label
                >
                <input
                  type="text"
                  id="firstName"
                  class="form-input"
                  formControlName="firstName"
                  [placeholder]="getLocalizedText('firstNamePlaceholder')"
                />
              </div>

              <div class="form-group">
                <label class="form-label" for="lastName"
                  >{{ getLocalizedText('lastName') }} *</label
                >
                <input
                  type="text"
                  id="lastName"
                  class="form-input"
                  formControlName="lastName"
                  [placeholder]="getLocalizedText('lastNamePlaceholder')"
                />
              </div>
            </div>

            <div class="form-group">
              <label class="form-label" for="email">{{ getLocalizedText('email') }} *</label>
              <input
                type="email"
                id="email"
                class="form-input"
                formControlName="email"
                [placeholder]="getLocalizedText('emailPlaceholder')"
              />
            </div>

            <div class="form-group">
              <label class="form-label" for="phone">{{ getLocalizedText('phone') }}</label>
              <input
                type="tel"
                id="phone"
                class="form-input"
                formControlName="phone"
                [placeholder]="getLocalizedText('phonePlaceholder')"
              />
            </div>
          </div>

          <!-- Professional Information -->
          <div class="form-section">
            <h2 class="section-title">{{ getLocalizedText('professionalInfo') }}</h2>

            <div class="form-group">
              <label class="form-label" for="company">{{ getLocalizedText('company') }} *</label>
              <input
                type="text"
                id="company"
                class="form-input"
                formControlName="company"
                [placeholder]="getLocalizedText('companyPlaceholder')"
              />
            </div>

            <div class="form-row">
              <div class="form-group">
                <label class="form-label" for="position"
                  >{{ getLocalizedText('position') }} *</label
                >
                <input
                  type="text"
                  id="position"
                  class="form-input"
                  formControlName="position"
                  [placeholder]="getLocalizedText('positionPlaceholder')"
                />
              </div>

              <div class="form-group">
                <label class="form-label" for="experience">{{
                  getLocalizedText('experience')
                }}</label>
                <select id="experience" class="form-select" formControlName="experience">
                  <option value="">{{ getLocalizedText('selectExperience') }}</option>
                  <option value="0-2">0-2 {{ getLocalizedText('years') }}</option>
                  <option value="3-5">3-5 {{ getLocalizedText('years') }}</option>
                  <option value="6-10">6-10 {{ getLocalizedText('years') }}</option>
                  <option value="10+">10+ {{ getLocalizedText('years') }}</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Additional Information -->
          <div class="form-section">
            <h2 class="section-title">{{ getLocalizedText('additionalInfo') }}</h2>

            <div class="form-group">
              <label class="form-label" for="motivation">{{
                getLocalizedText('motivation')
              }}</label>
              <textarea
                id="motivation"
                class="form-textarea"
                formControlName="motivation"
                rows="4"
                [placeholder]="getLocalizedText('motivationPlaceholder')"
              ></textarea>
            </div>

            <div class="form-group">
              <label class="form-label" for="expectations">{{
                getLocalizedText('expectations')
              }}</label>
              <textarea
                id="expectations"
                class="form-textarea"
                formControlName="expectations"
                rows="3"
                [placeholder]="getLocalizedText('expectationsPlaceholder')"
              ></textarea>
            </div>
          </div>

          <!-- Submit Button -->
          <div class="form-actions">
            <button type="submit" class="submit-button" [disabled]="registrationForm.invalid">
              {{ getLocalizedText('createAccount') }}
            </button>
            <p class="draft-status">
              {{ getDraftStatusText() }}
            </p>
          </div>
        </form>
      </div>
    </div>
  `,
  styleUrl: './registration.component.css',
})
export class RegistrationComponent implements OnDestroy {
  private readonly formBuilder = inject(FormBuilder);
  private readonly router = inject(Router);
  private readonly languageService = inject(LanguageService);
  private readonly draftService = inject(DraftService);

  private readonly DRAFT_KEY = 'registration_form';

  // Form state
  protected readonly registrationForm: FormGroup;
  protected readonly draftStatus = signal<string>('');

  constructor() {
    // Initialize form
    this.registrationForm = this.formBuilder.group({
      firstName: ['', [Validators.required, Validators.minLength(2)]],
      lastName: ['', [Validators.required, Validators.minLength(2)]],
      email: ['', [Validators.required, Validators.email]],
      phone: [''],
      company: ['', [Validators.required, Validators.minLength(2)]],
      position: ['', [Validators.required, Validators.minLength(2)]],
      experience: [''],
      motivation: [''],
      expectations: [''],
    });

    // Load draft data
    this.loadDraft();

    // Setup auto-save
    this.setupAutoSave();
  }

  ngOnDestroy(): void {
    // Save current form state as draft before component is destroyed
    this.saveDraft();
  }

  /**
   * Load draft data from DraftService
   */
  private loadDraft(): void {
    const draft = this.draftService.loadDraft(this.DRAFT_KEY, this.registrationForm);
    if (draft) {
      this.draftStatus.set(this.getLocalizedText('draftLoaded'));
    }
  }

  /**
   * Setup auto-save functionality
   */
  private setupAutoSave(): void {
    // Start auto-save with the existing DraftService method
    this.draftService.startAutoSave(this.registrationForm, this.DRAFT_KEY);

    // Update status when draft is saved
    this.registrationForm.valueChanges.subscribe(() => {
      setTimeout(() => {
        this.draftStatus.set(this.getLocalizedText('draftSaved'));
      }, 1000); // Delay to show save status after debounce
    });
  }

  /**
   * Save current form data as draft
   */
  private saveDraft(): void {
    this.draftService.saveDraft(this.DRAFT_KEY, this.registrationForm.value);
  }

  /**
   * Handle form submission
   */
  protected onSubmit(): void {
    if (this.registrationForm.valid) {
      console.log('Registration submitted:', this.registrationForm.value);

      // Clear draft after successful submission
      this.draftService.removeDraft(this.DRAFT_KEY);

      // Show success message and redirect
      alert(this.getLocalizedText('registrationSuccess'));
      this.router.navigate(['/']);
    }
  }

  /**
   * Go back to home page
   */
  protected goBack(): void {
    this.router.navigate(['/']);
  }

  /**
   * Get draft status text
   */
  protected getDraftStatusText(): string {
    const status = this.draftStatus();
    return status || this.getLocalizedText('autoSaveEnabled');
  }

  /**
   * Get localized text for current language
   */
  protected getLocalizedText(key: string): string {
    const currentLang = this.languageService.language();
    const translations: Record<Language, Record<string, string>> = {
      en: {
        back: 'Back',
        createAccount: 'Create Account',
        joinWorkshop: 'Join Executive\'s Workshop and transform your leadership skills',
        personalInfo: 'Personal Information',
        firstName: 'First Name',
        lastName: 'Last Name',
        email: 'Email Address',
        phone: 'Phone Number',
        firstNamePlaceholder: 'Enter your first name',
        lastNamePlaceholder: 'Enter your last name',
        emailPlaceholder: 'Enter your email address',
        phonePlaceholder: '+1 (555) 123-4567',
        professionalInfo: 'Professional Information',
        company: 'Company',
        position: 'Position',
        experience: 'Years of Experience',
        companyPlaceholder: 'Enter your company name',
        positionPlaceholder: 'Enter your job title',
        selectExperience: 'Select experience level',
        years: 'years',
        additionalInfo: 'Additional Information',
        motivation: 'What motivates you to join?',
        expectations: 'What are your expectations?',
        motivationPlaceholder: 'Tell us what drives you to improve your leadership skills...',
        expectationsPlaceholder: 'What do you hope to achieve from this workshop?',
        registrationSuccess: 'Registration successful! Welcome to Executive\'s Workshop.',
        draftLoaded: 'Draft loaded from previous session',
        draftSaved: 'Draft saved automatically',
        autoSaveEnabled: 'Auto-save enabled - your progress is saved automatically',
      },
      ru: {
        back: '–ù–∞–∑–∞–¥',
        createAccount: '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç',
        joinWorkshop:
          '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ú–∞—Å—Ç–µ—Ä—Å–∫–æ–π –î–∏—Ä–µ–∫—Ç–æ—Ä–∞ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å–≤–æ–∏ –ª–∏–¥–µ—Ä—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏',
        personalInfo: '–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        firstName: '–ò–º—è',
        lastName: '–§–∞–º–∏–ª–∏—è',
        email: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞',
        phone: '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
        firstNamePlaceholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
        lastNamePlaceholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é',
        emailPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å',
        phonePlaceholder: '+7 (999) 123-45-67',
        professionalInfo: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        company: '–ö–æ–º–ø–∞–Ω–∏—è',
        position: '–î–æ–ª–∂–Ω–æ—Å—Ç—å',
        experience: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã',
        companyPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏',
        positionPlaceholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å',
        selectExperience: '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞',
        years: '–ª–µ—Ç',
        additionalInfo: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        motivation: '–ß—Ç–æ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è?',
        expectations: '–ö–∞–∫–æ–≤—ã –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è?',
        motivationPlaceholder: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø–æ–±—É–∂–¥–∞–µ—Ç –≤–∞—Å —É–ª—É—á—à–∞—Ç—å –ª–∏–¥–µ—Ä—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏...',
        expectationsPlaceholder: '–ß–µ–≥–æ –≤—ã –æ–∂–∏–¥–∞–µ—Ç–µ –æ—Ç —ç—Ç–æ–≥–æ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞?',
        registrationSuccess: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞—Å—Ç–µ—Ä—Å–∫—É—é –î–∏—Ä–µ–∫—Ç–æ—Ä–∞.',
        draftLoaded: '–ß–µ—Ä–Ω–æ–≤–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Å—Å–∏–∏',
        draftSaved: '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
        autoSaveEnabled: '–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ - –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
      },
      zh: {
        back: 'ËøîÂõû',
        createAccount: 'ÂàõÂª∫Ë¥¶Êà∑',
        joinWorkshop: 'Âä†ÂÖ•È´òÁÆ°Â∑•‰ΩúÂùäÔºåÊèêÂçáÊÇ®ÁöÑÈ¢ÜÂØºÊäÄËÉΩ',
        personalInfo: '‰∏™‰∫∫‰ø°ÊÅØ',
        firstName: 'ÂêçÂ≠ó',
        lastName: 'ÂßìÊ∞è',
        email: 'ÁîµÂ≠êÈÇÆÁÆ±',
        phone: 'ÁîµËØùÂè∑Á†Å',
        firstNamePlaceholder: 'ËæìÂÖ•ÊÇ®ÁöÑÂêçÂ≠ó',
        lastNamePlaceholder: 'ËæìÂÖ•ÊÇ®ÁöÑÂßìÊ∞è',
        emailPlaceholder: 'ËæìÂÖ•ÊÇ®ÁöÑÈÇÆÁÆ±Âú∞ÂùÄ',
        phonePlaceholder: '+86 138 0013 8000',
        professionalInfo: 'ËÅå‰∏ö‰ø°ÊÅØ',
        company: 'ÂÖ¨Âè∏',
        position: 'ËÅå‰Ωç',
        experience: 'Â∑•‰ΩúÁªèÈ™å',
        companyPlaceholder: 'ËæìÂÖ•ÊÇ®ÁöÑÂÖ¨Âè∏ÂêçÁß∞',
        positionPlaceholder: 'ËæìÂÖ•ÊÇ®ÁöÑËÅå‰Ωç',
        selectExperience: 'ÈÄâÊã©ÁªèÈ™åÊ∞¥Âπ≥',
        years: 'Âπ¥',
        additionalInfo: 'ÈôÑÂä†‰ø°ÊÅØ',
        motivation: '‰ªÄ‰πà‰øÉ‰ΩøÊÇ®Âä†ÂÖ•Ôºü',
        expectations: 'ÊÇ®ÁöÑÊúüÊúõÊòØ‰ªÄ‰πàÔºü',
        motivationPlaceholder: 'ÂëäËØâÊàë‰ª¨ÊòØ‰ªÄ‰πàÈ©±‰ΩøÊÇ®ÊèêÂçáÈ¢ÜÂØºÊäÄËÉΩ...',
        expectationsPlaceholder: 'ÊÇ®Â∏åÊúõ‰ªéËøô‰∏™Â∑•‰ΩúÂùä‰∏≠Ëé∑Âæó‰ªÄ‰πàÔºü',
        registrationSuccess: 'Ê≥®ÂÜåÊàêÂäüÔºÅÊ¨¢ËøéÊù•Âà∞È´òÁÆ°Â∑•‰ΩúÂùä„ÄÇ',
        draftLoaded: 'Â∑≤Âä†ËΩΩ‰∏äÊ¨°‰ºöËØùÁöÑËçâÁ®ø',
        draftSaved: 'ËçâÁ®øÂ∑≤Ëá™Âä®‰øùÂ≠ò',
        autoSaveEnabled: 'Ëá™Âä®‰øùÂ≠òÂ∑≤ÂêØÁî® - ÊÇ®ÁöÑËøõÂ∫¶‰ºöËá™Âä®‰øùÂ≠ò',
      },
    };

    return translations[currentLang]?.[key] || key;
  }
}
